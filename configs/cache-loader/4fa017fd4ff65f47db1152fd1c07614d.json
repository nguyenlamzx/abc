{"remainingRequest":"D:\\git-local\\babel-7-typescript-boilerplate\\node_modules\\thread-loader\\dist\\cjs.js??ref--0-1!D:\\git-local\\babel-7-typescript-boilerplate\\node_modules\\babel-loader\\lib\\index.js??ref--0-2!D:\\git-local\\babel-7-typescript-boilerplate\\src\\components\\Component.ts","dependencies":[{"path":"D:\\git-local\\babel-7-typescript-boilerplate\\src\\components\\Component.ts","mtime":1556281988310},{"path":"D:\\git-local\\babel-7-typescript-boilerplate\\.babelrc","mtime":1556254249464},{"path":"D:\\git-local\\babel-7-typescript-boilerplate\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git-local\\babel-7-typescript-boilerplate\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\git-local\\babel-7-typescript-boilerplate\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nexport var BaseComponent =\n/*#__PURE__*/\nfunction () {\n  function BaseComponent(el) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, BaseComponent);\n\n    this.el = el;\n    this.props = props;\n    this.el.innerHTML = this.render();\n  }\n\n  _createClass(BaseComponent, [{\n    key: \"render\",\n    value: function render() {\n      return (\n        /* es6 */\n        \"\\n      <div>\\n        hi \".concat(this.props.name, \" from tsx!\\n      </div>\\n    \")\n      );\n    }\n  }]);\n\n  return BaseComponent;\n}();",{"version":3,"sources":["D:\\git-local\\babel-7-typescript-boilerplate\\src\\components\\Component.ts"],"names":["BaseComponent","el","props","innerHTML","render","name"],"mappings":";;;;;;AAIA,WAAaA,aAAb;AAAA;AAAA;AAME,yBAAYC,EAAZ,EAAmC;AAAA,QAAnBC,KAAmB,uEAAJ,EAAI;;AAAA;;AACjC,SAAKD,EAAL,GAAUA,EAAV;AACA,SAAKC,KAAL,GAAaA,KAAb;AAEA,SAAKD,EAAL,CAAQE,SAAR,GAAoB,KAAKC,MAAL,EAApB;AACD;;AAXH;AAAA;AAAA,6BAamB;AACf;AAAO;AAAP,4CAES,KAAKF,KAAL,CAAWG,IAFpB;AAAA;AAKD;AAnBH;;AAAA;AAAA","sourcesContent":["interface Props {\n  name?: string;\n}\n\nexport class BaseComponent {\n  el: HTMLElement;\n  props: Props;\n\n  static namespace: 'base-component';\n\n  constructor(el, props: Props = {}) {\n    this.el = el;\n    this.props = props;\n\n    this.el.innerHTML = this.render();\n  }\n\n  render(): string {\n    return /* es6 */ `\n      <div>\n        hi ${this.props.name} from tsx!\n      </div>\n    `;\n  }\n}\n"]}]}